//==============================================================================
#include "stdafx.h"
#include "Chinese.h"
//==============================================================================
void geteji(float x1, float y1, float x2, float y2){
	glBegin(GL_POLYGON);
		glVertex3f(x1, y1, 0.0f);
		glVertex3f(x1, y2, 0.0f);
		glVertex3f(x2, y2, 0.0f);
		glVertex3f(x2, y1, 0.0f);
	glEnd();
	glColor3f(1.0f,1.0f, 1.0f);
	glBegin(GL_TRIANGLES); 
		glVertex3f(x1, y1, 0.0f);
		glVertex3f(x1, y1-(y1-y2)*0.1538f, 0.0f);
		glVertex3f(x1+(x2-x1)*0.725f, y1, 0.0f);
		glVertex3f(x2, y1, 0.0f);
		glVertex3f(x2-(x2-x1)*0.05f, y1, 0.0f);
		glVertex3f(x2, y1 - (y1 - y2)*0.0769f, 0.0f);
		glVertex3f(x1+(x2-x1)*0.875f, y1-(y1-y2)*0.0961f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.75f, y1 - (y1 - y2)*0.0961f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.875f, y1 - (y1 - y2)*0.1923f, 0.0f);
		glVertex3f(x1+(x2-x1)*0.6f, y1-(y1-y2)*0.1346f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.6f, y1 - (y1 - y2)*0.1538f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.675f, y1 - (y1 - y2)*0.1538f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.6f, y1 - (y1 - y2)*0.4038f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.475f, y1 - (y1 - y2)*0.4807f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.675f, y1 - (y1 - y2)*0.4807f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.725f, y1 - (y1 - y2)*0.6153f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.625f, y1 - (y1 - y2)*0.6923f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.8f, y1 - (y1 - y2)*0.6923f, 0.0f);
		glVertex3f(x2, y1 - (y1 - y2)*0.923f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.9f, y2, 0.0f);
		glVertex3f(x2, y2, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.625f, y1 - (y1 - y2)*0.5384f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.1f, y1 - (y1 - y2)*0.7307f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.375f, y1 - (y1 - y2)*0.7307f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.3f, y1 - (y1 - y2)*0.3653f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.075f, y1 - (y1 - y2)*0.4615f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.1f, y1 - (y1 - y2)*0.5192f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.475f, y1 - (y1 - y2)*0.3076f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.35f, y1 - (y1 - y2)*0.4038f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.55f, y1 - (y1 - y2)*0.3076f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.1f, y1 - (y1 - y2)*0.5576f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.1f, y1 - (y1 - y2)*0.7307f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.2f, y1 - (y1 - y2)*0.7307f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.225f, y1 - (y1 - y2)*0.5384f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.1f, y1 - (y1 - y2)*0.6153f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.1f, y1 - (y1 - y2)*0.673f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.65f, y1 - (y1 - y2)*0.2692f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.7f, y1 - (y1 - y2)*0.3653f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.7f, y1 - (y1 - y2)*0.2692f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.7f, y1 - (y1 - y2)*0.25f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.875f, y1 - (y1 - y2)*0.25f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.875f, y1 - (y1 - y2)*0.423f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.875f, y1 - (y1 - y2)*0.423f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.775f, y1 - (y1 - y2)*0.5192f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.875f, y1 - (y1 - y2)*0.5961f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.875f, y1 - (y1 - y2)*0.0961f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.875f, y1 - (y1 - y2)*0.8269f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.9f, y1 - (y1 - y2)*0.0961f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.9f, y1 - (y1 - y2)*0.0961f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.875f, y1 - (y1 - y2)*0.8269f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.9f, y1 - (y1 - y2)*0.8269f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.825f, y1 - (y1 - y2)*0.8269f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.9f, y1 - (y1 - y2)*0.8653f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.9f, y1 - (y1 - y2)*0.8269f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.825f, y1 - (y1 - y2)*0.8269f, 0.0f);
		glVertex3f(x1 , y1 - (y1 - y2)*0.8653f, 0.0f);
		glVertex3f(x1, y2, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.9f, y2, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.175f, y1 - (y1 - y2)*0.2307f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.225f, y1 - (y1 - y2)*0.2884f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.475f, y1 - (y1 - y2)*0.2307f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.475f, y1 - (y1 - y2)*0.1538f, 0.0f);
	glEnd();
	glColor3f(0.6f,0.196f, 0.8f);
}
//==============================================================================
void getxu(float x1, float y1, float x2, float y2){
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.3157f, y1, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.3157f, y1 - (y1 - y2)*0.1025f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.421f, y1 - (y1 - y2)*0.2051f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.6315f, y1 - (y1 - y2)*0.2051f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.6315f, y1 - (y1 - y2)*0.1538f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.3684f, y1, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.2894f, y1 - (y1 - y2)*0.2564f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.1052f, y1 - (y1 - y2)*0.282f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.0526f, y1 - (y1 - y2)*0.3076f, 0.0f);
		glVertex3f(x1 , y1 - (y1 - y2)*0.3589f, 0.0f);
		glVertex3f(x1 , y1 - (y1 - y2)*0.4102f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.0526f, y1 - (y1 - y2)*0.4615f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.1842f, y1 - (y1 - y2)*0.4358f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.3421f, y1 - (y1 - y2)*0.3846f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.6315f, y1 - (y1 - y2)*0.3333f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.7894f, y1 - (y1 - y2)*0.3076f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.8157f, y1 - (y1 - y2)*0.2564f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.7894f, y1 - (y1 - y2)*0.2051f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.7368f, y1 - (y1 - y2)*0.1794f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.5789f, y1 - (y1 - y2)*0.3589f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.4473f, y1 - (y1 - y2)*0.3589f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.2368f, y1 - (y1 - y2)*0.5128f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.1842f, y1 - (y1 - y2)*0.5897f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.1842f, y1 - (y1 - y2)*0.641f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.7105f, y1 - (y1 - y2)*0.4102f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.6315f, y1 - (y1 - y2)*0.4102f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.5263f, y1 - (y1 - y2)*0.4358f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.3947f, y1 - (y1 - y2)*0.4615f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.1842f, y1 - (y1 - y2)*0.641f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.1842f, y1 - (y1 - y2)*0.6666f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.2105f, y1 - (y1 - y2)*0.6923f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.2631f, y1 - (y1 - y2)*0.6923f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.421f, y1 - (y1 - y2)*0.5897f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.5526f, y1 - (y1 - y2)*0.5128f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.7105f, y1 - (y1 - y2)*0.4102f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.6578f, y1 - (y1 - y2)*0.4358f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.7105f, y1 - (y1 - y2)*0.4871f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.7894f, y1 - (y1 - y2)*0.5384f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.8157f, y1 - (y1 - y2)*0.4871f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.8157f, y1 - (y1 - y2)*0.4358f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.7631f, y1 - (y1 - y2)*0.4102f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.7631f, y1 - (y1 - y2)*0.4615f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.3157f, y1 - (y1 - y2)*0.8974f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.4473f, y1 - (y1 - y2)*0.8974f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.8157f, y1 - (y1 - y2)*0.5128f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.9473f, y1 - (y1 - y2)*0.8205f, 0.0f);
		glVertex3f(x1 , y1 - (y1 - y2)*0.8974f, 0.0f);
		glVertex3f(x1 , y1 - (y1 - y2)*0.923f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.0789f, y2, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.2105f, y2, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.8421f, y1 - (y1 - y2)*0.923f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.921f, y1 - (y1 - y2)*0.8205f, 0.0f);
		glVertex3f(x2, y1 - (y1 - y2)*0.8461f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.9736f, y1 - (y1 - y2)*0.923f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.921f, y1 - (y1 - y2)*0.9487f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.8157f, y1 - (y1 - y2)*0.923f, 0.0f);
	glEnd();
}
//==============================================================================
void get5j(float x1, float y1, float x2, float y2){
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.575f, y1, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.575f, y2, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.675f, y1 - (y1 - y2)*0.9677f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.725f, y1, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.025f, y1 - (y1 - y2)*0.1612f, 0.0f);
		glVertex3f(x1 , y1 - (y1 - y2)*0.2258f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.025f, y1 - (y1 - y2)*0.3225f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.05f, y1 - (y1 - y2)*0.3709f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.1f, y1 - (y1 - y2)*0.4032f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.15f, y1 - (y1 - y2)*0.4354f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.175f, y1 - (y1 - y2)*0.3064f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.1f, y1 - (y1 - y2)*0.1935f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.075f, y1 - (y1 - y2)*0.1774f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.025f, y1 - (y1 - y2)*0.1612f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.025f, y1 - (y1 - y2)*0.1774f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.175f, y1 - (y1 - y2)*0.1774f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.175f, y1 - (y1 - y2)*0.1612f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.15f, y1 - (y1 - y2)*0.1612f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.15f, y1 - (y1 - y2)*0.1774f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.25f, y1 - (y1 - y2)*0.2258f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.6f, y1 - (y1 - y2)*0.1451f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.95f, y1 - (y1 - y2)*0.0967f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.6f, y1 - (y1 - y2)*0.0967f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.7f, y1 - (y1 - y2)*0.0967f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.7f, y1 - (y1 - y2)*0.129f, 0.0f);
		glVertex3f(x2, y1 - (y1 - y2)*0.1451f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.95f, y1 - (y1 - y2)*0.0967f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.85f, y1 - (y1 - y2)*0.129f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.375f, y1 - (y1 - y2)*0.3548f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.325f, y1 - (y1 - y2)*0.4032f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.375f, y1 - (y1 - y2)*0.4193f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.475f, y1 - (y1 - y2)*0.4032f, 0.0f);
		glVertex3f(x2, y1 - (y1 - y2)*0.129f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.55f, y1 - (y1 - y2)*0.3225f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.475f, y1 - (y1 - y2)*0.4032f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.8f, y1 - (y1 - y2)*0.3709f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.825f, y1 - (y1 - y2)*0.3387f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.825f, y1 - (y1 - y2)*0.3225f, 0.0f);
	glEnd();
}
//==============================================================================
void getvu(float x1, float y1, float x2, float y2){
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.322f, y1 - (y1 - y2)*0.1136f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.2881f, y1 - (y1 - y2)*0.159f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.322f, y1 - (y1 - y2)*0.1818f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.3559f, y1 - (y1 - y2)*0.1818f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.305f, y1 - (y1 - y2)*0.159f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.305f, y1 - (y1 - y2)*0.659f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.3559f, y1 - (y1 - y2)*0.659f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.3559f, y1 - (y1 - y2)*0.1818f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.3728f, y1 - (y1 - y2)*0.1136f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.4067f, y1 - (y1 - y2)*0.159f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.4406f, y1 - (y1 - y2)*0.1363f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.4067f, y1 - (y1 - y2)*0.0909f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.4067f, y1 - (y1 - y2)*0.1363f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.4067f, y1 - (y1 - y2)*0.6363f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.4406f, y1 - (y1 - y2)*0.6363f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.4406f, y1 - (y1 - y2)*0.1363f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.0169f, y1 - (y1 - y2)*0.7045f, 0.0f);
		glVertex3f(x1 , y1 - (y1 - y2)*0.7727f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.0169f, y1 - (y1 - y2)*0.8181f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.0508f, y1 - (y1 - y2)*0.8636f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.4915f, y1 - (y1 - y2)*0.6363f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.4915f, y1 - (y1 - y2)*0.5681f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.4757f, y1 - (y1 - y2)*0.1136f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.4915f, y1 - (y1 - y2)*0.5681f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.644f, y1 - (y1 - y2)*0.5681f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.6949f, y1 - (y1 - y2)*0.0909f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.6949f, y1 - (y1 - y2)*0.0227f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.661f, y1, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.6949f, y1 - (y1 - y2)*0.0909f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.6949f, y1 - (y1 - y2)*0.1363f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.8135f, y1 - (y1 - y2)*0.1363f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.8474f, y1 - (y1 - y2)*0.0909f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.8474f, y1 - (y1 - y2)*0.0227f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.8135f, y1 - (y1 - y2)*0.0227f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.7627f, y1 - (y1 - y2)*0.1363f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.7457f, y1 - (y1 - y2)*0.4772f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.7627f, y1 - (y1 - y2)*0.4772f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.8135f, y1 - (y1 - y2)*0.1363f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.7118f, y1 - (y1 - y2)*0.4772f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.7288f, y1 - (y1 - y2)*0.6136f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.7627f, y1 - (y1 - y2)*0.5681f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.7627f, y1 - (y1 - y2)*0.4772f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.644f, y1 - (y1 - y2)*0.1818f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.644f, y1 - (y1 - y2)*0.3863f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.7966f, y1 - (y1 - y2)*0.409f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.8135f, y1 - (y1 - y2)*0.3636f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.5593f, y1 - (y1 - y2)*0.6136f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.5932f, y1 - (y1 - y2)*0.6818f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.644f, y1 - (y1 - y2)*0.6363f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.644f, y1 - (y1 - y2)*0.5909f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.4745f, y1 - (y1 - y2)*0.5681f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.4745f, y1 - (y1 - y2)*0.6363f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.983f, y1 - (y1 - y2)*0.5454f, 0.0f);
		glVertex3f(x2, y1 - (y1 - y2)*0.5f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.983f, y1 - (y1 - y2)*0.4772f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.9491f, y1 - (y1 - y2)*0.4545f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.2033f, y1 - (y1 - y2)*0.8409f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.2033f, y1 - (y1 - y2)*0.8863f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.2881f, y1 - (y1 - y2)*0.8636f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.2203f, y1 - (y1 - y2)*0.8409f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.2033f, y1 - (y1 - y2)*0.8863f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.2881f, y1 - (y1 - y2)*0.9782f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.4576f, y1 - (y1 - y2)*0.8636f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.4576f, y1 - (y1 - y2)*0.8863f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.2881f, y1 - (y1 - y2)*0.8636f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.7627f, y1 - (y1 - y2)*0.7272f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.9322f, y1 - (y1 - y2)*0.9782f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.9491f, y1 - (y1 - y2)*0.9782f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.983f, y1 - (y1 - y2)*0.9318f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.983f, y1 - (y1 - y2)*0.909f, 0.0f);
	glEnd();
	glColor3f(1.0f,1.0f, 1.0f);
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.5593f, y1 - (y1 - y2)*0.1136f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.5593f, y1 - (y1 - y2)*0.2045f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.5932f, y1 - (y1 - y2)*0.2045f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.5932f, y1 - (y1 - y2)*0.1136f, 0.0f);
	glEnd();
	glBegin(GL_TRIANGLES);
		glVertex3f(x1 + (x2 - x1)*0.6779f, y1 - (y1 - y2)*0.2954f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.661f, y1 - (y1 - y2)*0.3409f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.7118f, y1 - (y1 - y2)*0.3409f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.5932f, y1 - (y1 - y2)*0.4545f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.5762f, y1 - (y1 - y2)*0.5f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.5932f, y1 - (y1 - y2)*0.5227f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.5932f, y1 - (y1 - y2)*0.3409f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.5762f, y1 - (y1 - y2)*0.3636f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.5932f, y1 - (y1 - y2)*0.3863f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.5593f, y1 - (y1 - y2)*0.3181f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.5423f, y1 - (y1 - y2)*0.3409f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.5593f, y1 - (y1 - y2)*0.3409f, 0.0f);
	glEnd();
	glColor3f(0.6f,0.196f, 0.8f);
}
//==============================================================================
void get28(float x1, float y1, float x2, float y2){
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.6052f, y1 , 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.5789f, y1 - (y1 - y2)*0.054f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.421f, y1 - (y1 - y2)*0.6485f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.6052f, y1 - (y1 - y2)*0.3243f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.6315f, y1 , 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.0526f, y1 - (y1 - y2)*0.5135f, 0.0f);
		glVertex3f(x1 , y1 - (y1 - y2)*0.5405f, 0.0f);
		glVertex3f(x1 , y1 - (y1 - y2)*0.5945f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.0263f, y1 - (y1 - y2)*0.6486f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.0789f, y1 - (y1 - y2)*0.6756f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.4473f, y1 - (y1 - y2)*0.4864f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.7631f, y1 - (y1 - y2)*0.4054f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.7894f, y1 - (y1 - y2)*0.3243f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.7368f, y1 - (y1 - y2)*0.2972f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.6842f, y1 - (y1 - y2)*0.2972f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.5263f, y1 - (y1 - y2)*0.4324f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.421f, y1 - (y1 - y2)*0.6486f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.3157f, y1 - (y1 - y2)*0.9459f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.421f, y1 - (y1 - y2)*0.8378f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.5f, y1 - (y1 - y2)*0.7027f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.5263f, y1 - (y1 - y2)*0.5675f, 0.0f);
	glEnd();
	glBegin(GL_TRIANGLES);
		glVertex3f(x1 + (x2 - x1)*0.1052f, y1 - (y1 - y2)*0.9459f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.3157f, y1 - (y1 - y2)*0.9459f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.2105f, y1 - (y1 - y2)*0.8648f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.2105f, y1 - (y1 - y2)*0.8648f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.3157f, y1 - (y1 - y2)*0.9459f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.3157f, y1 - (y1 - y2)*0.8108f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.3157f, y1 - (y1 - y2)*0.8108f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.3157f, y1 - (y1 - y2)*0.9459f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.421f, y1 - (y1 - y2)*0.8378f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.3157f, y1 - (y1 - y2)*0.8108f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.421f, y1 - (y1 - y2)*0.8378f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.3947f, y1 - (y1 - y2)*0.7297f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.6052f, y1 - (y1 - y2)*0.6756f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.921f, y1 - (y1 - y2)*0.8108f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.9736f, y1 - (y1 - y2)*0.8648f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.9736f, y1 - (y1 - y2)*0.9189f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.9473f, y2 , 0.0f);
	glEnd();
	glBegin(GL_TRIANGLES);
		glVertex3f(x1 + (x2 - x1)*0.8421f, y1 - (y1 - y2)*0.8378f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.6578f, y1 - (y1 - y2)*0.9459f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.921f, y1 - (y1 - y2)*0.9729f, 0.0f);
	glEnd();
}
//==============================================================================
void getvm(float x1, float y1, float x2, float y2){
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.3555f, y1 - (y1 - y2)*0.3709f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.2f, y1 - (y1 - y2)*0.4032f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.0666f, y1 - (y1 - y2)*0.4677f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.0222f, y1 - (y1 - y2)*0.5f, 0.0f);
		glVertex3f(x1 , y1 - (y1 - y2)*0.5322f, 0.0f);
		glVertex3f(x1 , y1 - (y1 - y2)*0.5645f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.0222f, y1 - (y1 - y2)*0.5967f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.0888f, y1 - (y1 - y2)*0.5967f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.1111f, y1 - (y1 - y2)*0.5322f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.3555f, y1 - (y1 - y2)*0.4193f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.3555f, y1 - (y1 - y2)*0.3709f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.3555f, y1 - (y1 - y2)*0.4193f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.7777f, y1 - (y1 - y2)*0.4032f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.9333f, y1 - (y1 - y2)*0.387f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.9777f, y1 - (y1 - y2)*0.3387f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.9555f, y1 - (y1 - y2)*0.3064f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.8666f, y1 - (y1 - y2)*0.2903f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.7777f, y1 - (y1 - y2)*0.2903f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.6222f, y1 - (y1 - y2)*0.3064f, 0.0f);
	glEnd();
	glColor3f(1.0f,1.0f, 1.0f);
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.3555f, y1 - (y1 - y2)*0.4193f, 0.0f);	
		glVertex3f(x1 + (x2 - x1)*0.6888f, y1 - (y1 - y2)*0.3387f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.7777f, y1 - (y1 - y2)*0.3225f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.8222f, y1 - (y1 - y2)*0.3387f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.7777f, y1 - (y1 - y2)*0.4032f, 0.0f);
	glEnd();
	glColor3f(0.6f,0.196f, 0.8f);
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.3333f, y1 , 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.2222f, y1 - (y1 - y2)*0.0967f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.2666f, y1 - (y1 - y2)*0.0967f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.3555f, y1 - (y1 - y2)*0.0645f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.3555f, y1 - (y1 - y2)*0.0322f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.2f, y1 - (y1 - y2)*0.0645f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.1777f, y1 - (y1 - y2)*0.1451f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.2f, y1 - (y1 - y2)*0.2741f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.2222f, y1 - (y1 - y2)*0.258f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.3333f, y1 - (y1 - y2)*0.1935f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.3333f, y1 - (y1 - y2)*0.1129f, 0.0f);
	glEnd();

	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.7777f, y1 - (y1 - y2)*0.0161f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.7333f, y1 - (y1 - y2)*0.0322f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.6f, y1 - (y1 - y2)*0.0645f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.2f, y1 - (y1 - y2)*0.258f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.2f, y1 - (y1 - y2)*0.4032f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.7333f, y1 - (y1 - y2)*0.2903f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.7555f, y1 - (y1 - y2)*0.129f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.8222f, y1 - (y1 - y2)*0.0322f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.5333f, y1 - (y1 - y2)*0.0161f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.3777f, y1 - (y1 - y2)*0.1129f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.4222f, y1 - (y1 - y2)*0.1935f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.5777f, y1 - (y1 - y2)*0.0483f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.5555f, y1 - (y1 - y2)*0.0161f, 0.0f);
	glEnd();
	glColor3f(1.0f,1.0f, 1.0f);
	glBegin(GL_TRIANGLES);
		glVertex3f(x1 + (x2 - x1)*0.5333f, y1 - (y1 - y2)*0.0161f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.3777f, y1 - (y1 - y2)*0.1129f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.4666f, y1 - (y1 - y2)*0.0967f, 0.0f);
	glEnd();
	glColor3f(0.6f,0.196f, 0.8f);
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.5555f, y1 - (y1 - y2)*0.4032f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.4444f, y1 - (y1 - y2)*0.4677f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.5555f, y1 - (y1 - y2)*0.5f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.6428f, y1 - (y1 - y2)*0.4838f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.6444f, y1 - (y1 - y2)*0.4193f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.5555f, y1 - (y1 - y2)*0.4032f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.5555f, y1 - (y1 - y2)*0.5f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.3111f, y1 - (y1 - y2)*0.5806f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.3111f, y1 - (y1 - y2)*0.5967f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.3333f, y1 - (y1 - y2)*0.629f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.7777f, y1 - (y1 - y2)*0.5645f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.8222f, y1 - (y1 - y2)*0.5806f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.8444f, y1 - (y1 - y2)*0.5645f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.8222f, y1 - (y1 - y2)*0.5322f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.6444f, y1 - (y1 - y2)*0.5322f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.6f, y1 - (y1 - y2)*0.4838f, 0.0f);
	glEnd();
	glColor3f(1.0f,1.0f, 1.0f);
	glBegin(GL_TRIANGLES);
		glVertex3f(x1 + (x2 - x1)*0.5555f, y1 - (y1 - y2)*0.5f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.3111f, y1 - (y1 - y2)*0.5806f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.5111f, y1 - (y1 - y2)*0.5483f, 0.0f);
	glEnd();
	glColor3f(0.6f,0.196f, 0.8f);
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.5555f, y1 - (y1 - y2)*0.5645f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.5555f, y1 - (y1 - y2)*0.7741f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.0222f, y1 - (y1 - y2)*0.9516f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.1111f, y1 - (y1 - y2)*0.9677f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.2888f, y1 - (y1 - y2)*0.9677f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.5111f, y1 - (y1 - y2)*0.9193f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.6444f, y1 - (y1 - y2)*0.8225f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.6444f, y1 - (y1 - y2)*0.7741f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.6222f, y1 - (y1 - y2)*0.5645f, 0.0f);
	glEnd();
	glColor3f(1.0f,1.0f, 1.0f);
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.5555f, y1 - (y1 - y2)*0.5645f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.0222f, y1 - (y1 - y2)*0.9516f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.3777f, y1 - (y1 - y2)*0.9193f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.5555f, y1 - (y1 - y2)*0.7741f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.4888f, y1 - (y1 - y2)*0.1774f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.4444f, y1 - (y1 - y2)*0.2096f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.4666f, y1 - (y1 - y2)*0.2419f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.4888f, y1 - (y1 - y2)*0.2096f, 0.0f);
	glEnd();
	glBegin(GL_POLYGON);
		glVertex3f(x1 + (x2 - x1)*0.3777f, y1 - (y1 - y2)*0.258f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.2888f, y1 - (y1 - y2)*0.3225f,0.0f);
		glVertex3f(x1 + (x2 - x1)*0.2888f, y1 - (y1 - y2)*0.3548f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.3333f, y1 - (y1 - y2)*0.3709f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.4f, y1 - (y1 - y2)*0.3387f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.4222f, y1 - (y1 - y2)*0.3064f, 0.0f);
	glEnd();
	glBegin(GL_TRIANGLES);
		glVertex3f(x1 + (x2 - x1)*0.6222f, y1 - (y1 - y2)*0.1612f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.6222f, y1 - (y1 - y2)*0.129f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.6888f, y1 - (y1 - y2)*0.1612f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.5555f, y1 - (y1 - y2)*0.2419f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.5555f, y1 - (y1 - y2)*0.3064f, 0.0f);
		glVertex3f(x1 + (x2 - x1)*0.6222f, y1 - (y1 - y2)*0.3064f, 0.0f);
	glEnd();
	glColor3f(0.6f,0.196f, 0.8f);
}
//==============================================================================